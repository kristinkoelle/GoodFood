@model FarmViewModel

@{
    ViewBag.Title = Model.Farm.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>
<script type="text/javascript" src="~/Scripts/Index.js"></script>

<h2>@Model.Farm.Name</h2>


@using Microsoft.AspNet.Identity;
@if (User.Identity.GetUserId() == Model.Farm.RequestorId)
{

    @Html.ActionLink("Create Event", "Create", "Event", new { id = Model.Farm.Id }, new { @class = "btn btn-default" })
    @Html.ActionLink("Edit Page", "Edit", new { id = Model.Farm.Id }, new { @class = "btn btn-default" })

}
<div class="row">
    <div class="col-4">

        @if (Model.Farm.LogoFilePath != null)
        {
            string _url = @Model.Farm.LogoFilePath;
            <img src="@Url.Content(_url)" style="width: 200px" title="@ViewData.Model.Farm.LogoFilePath" />
        }

        else
        {
            <img src="~/Image/logo.png" style="width: 200px" title="Default Image" />

        }
    </div>
    <div id="map" style="width:500px">

    </div>
</div>
@using Newtonsoft.Json;
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript">

    var lat = @Html.Raw(JsonConvert.SerializeObject(Model.Farm.Address.Lat, Formatting.Indented,
                            new JsonSerializerSettings
                            {
                                ReferenceLoopHandling = ReferenceLoopHandling.Ignore
                            }));
   var lng = @Html.Raw(JsonConvert.SerializeObject(Model.Farm.Address.Lng, Formatting.Indented,
                            new JsonSerializerSettings
                            {
                                ReferenceLoopHandling = ReferenceLoopHandling.Ignore
                            }));


    function initMap() {

        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 8,
            center: { lat, lng }
        });

        var marker = new google.maps.Marker({ position: new google.maps.LatLng(lat, lng), map: map });


        }


</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBSTcHEED_69_2WYbJxFEqt9-O4Z3Xy7oY&callback=initMap"
        async defer></script>



<hr />